imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
# Configuration Exemple
    #- { resource: default.yml, ignore_errors: true }
# Configuration Site
    - { resource: site.yml, ignore_errors: true }
    
framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        # Sauvegarde les sessions dans la DB
        #handler_id: session.handler.pdo
        
    fragments:       ~
    http_method_override: true

    # pour le restbundle
    serializer:
        enabled: true
        
# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
#    exception_controller:  CoreBundle:Exception:showException
    form_themes:
        - 'bootstrap_3_horizontal_layout.html.twig'
        
# Doctrine Configuration
doctrine:
    dbal:
        default_connection: default
        connections:
            default:
                driver:   "%database_driver%"
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_name%"
                user:     "%database_user%"
                password: "%database_password%"
                service:  "%database_service%"
                servicename: "%database_servicename%"
                charset:  UTF8
            local:
                driver:   pdo_mysql
                host:     127.0.0.1
                port:     3306
                dbname:   arii
                user:     root
                password: null
                charset:  UTF8
            ojs_db:
                driver:      "%database_ojs_driver%"
                host:        "%database_ojs_host%"
                port:        "%database_ojs_port%"
                dbname:      "%database_ojs_name%"
                user:        "%database_ojs_user%"
                password:    "%database_ojs_password%"
                service:     "%database_ojs_service%"
                servicename: "%database_ojs_servicename%"
                charset:  UTF8
            ats_db:
                driver:      "%database_ats_driver%"
                host:        "%database_ats_host%"
                port:        "%database_ats_port%"
                dbname:      "%database_ats_name%"
                user:        "%database_ats_user%"
                password:    "%database_ats_password%"
                service:     "%database_ats_service%"
                servicename: "%database_ats_servicename%"
                charset:  UTF8
                # Pour l'import
                schema_filter: /^UJO_(ALARM|JOB|JOB_STATUS|JOB_RUNS|JOB_TREE|MACHINE|SCHED_INFO|COMMAND_JOB|FILE_WATCH_JOB|WORKFLOW|CRED|ALAMODE|CALENDAR)$/
            ats_db2:
                driver:   "%database_ats2_driver%"
                host:     "%database_ats2_host%"
                port:     "%database_ats2_port%"
                dbname:   "%database_ats2_name%"
                user:     "%database_ats2_user%"
                password: "%database_ats2_password%"
                charset:  UTF8
                # Pour l'import
                schema_filter: /^UJO_(ALARM|JOB|JOB_STATUS|JOB_RUNS|JOB_TREE|MACHINE|SCHED_INFO|COMMAND_JOB|FILE_WATCH_JOB|WORKFLOW|CRED|ALAMODE|CALENDAR)$/
            ojs_db2:
                driver:   "%database_ojs2_driver%"
                host:     "%database_ojs2_host%"
                port:     "%database_ojs2_port%"
                dbname:   "%database_ojs2_name%"
                user:     "%database_ojs2_user%"
                password: "%database_ojs2_password%"
                charset:  UTF8                
                
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        default_entity_manager: default
        entity_managers:
            default:
                connection: default
                mappings:
                    AriiCoreBundle: ~
                    AriiUserBundle: ~
                    AriiReportBundle: ~
                    AriiATSBundle: ~
                    AriiJOCBundle: ~
                    AriiSelfBundle: ~
                    AriiMFTBundle: ~
                    AriiACKBundle: ~
                dql:
                    datetime_functions:
                        Hour:  Arii\CoreBundle\DQL\%database_driver%\Hour
                        Date:  Arii\CoreBundle\DQL\%database_driver%\Date
                        Trunc: Arii\CoreBundle\DQL\%database_driver%\Trunc
                        Month: Arii\CoreBundle\DQL\%database_driver%\Month
                        Year:  Arii\CoreBundle\DQL\%database_driver%\Year
                        Cast:  Arii\CoreBundle\DQL\%database_driver%\Cast
            ojs_db:
                connection: ojs_db
                mappings:
                    AriiJIDBundle: ~
                dql:
                    datetime_functions:
                        Hour:  Arii\CoreBundle\DQL\%database_ojs_driver%\Hour
                        Date:  Arii\CoreBundle\DQL\%database_ojs_driver%\Date
                        Trunc: Arii\CoreBundle\DQL\Trunc
                        Month: Arii\CoreBundle\DQL\Month
                        Year:  Arii\CoreBundle\DQL\Year
                        Cast:  Arii\CoreBundle\DQL\Cast
            ats_db:
                connection: ats_db
                mappings:
                    AriiATSBundle: ~
                dql:
                    datetime_functions:
                        Hour:  Arii\CoreBundle\DQL\%database_ats_driver%\Hour
                        Date:  Arii\CoreBundle\DQL\%database_ats_driver%\Date
                        Trunc: Arii\CoreBundle\DQL\Trunc
                        Month: Arii\CoreBundle\DQL\Month
                        Year:  Arii\CoreBundle\DQL\Year
                        Cast:  Arii\CoreBundle\DQL\Cast
            ats_db2:
                connection: ats_db2
                mappings:
                    AriiATSBundle: ~
                dql:
                    datetime_functions:
                        Hour:  Arii\CoreBundle\DQL\%database_ats_driver%\Hour
                        Date:  Arii\CoreBundle\DQL\%database_ats_driver%\Date
                        Trunc: Arii\CoreBundle\DQL\Trunc
                        Month: Arii\CoreBundle\DQL\Month
                        Year:  Arii\CoreBundle\DQL\Year
                        Cast:  Arii\CoreBundle\DQL\Cast
            ojs_db2:
                connection: ojs_db2
                dql:
                    datetime_functions:
                        Hour:  Arii\CoreBundle\DQL\%database_ojs_driver%\Hour
                        Date:  Arii\CoreBundle\DQL\%database_ojs_driver%\Date
                        Trunc: Arii\CoreBundle\DQL\Trunc
                        Month: Arii\CoreBundle\DQL\Month
                        Year:  Arii\CoreBundle\DQL\Year
                        Cast:  Arii\CoreBundle\DQL\Cast

# Swiftmailer Configuration        auto_generate_proxy_classes: "%kernel.debug%"
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# Configuration FOSUserBundle
fos_user:
    db_driver:     orm                        # Le type de BDD à utiliser, nous utilisons l'ORM Doctrine depuis le début
    firewall_name: main                       # Le nom du firewall duquel on utilisera ces utilisateurs
    user_class:    Arii\UserBundle\Entity\User # La classe de l'entité User que nous venons de définir
    group:
        group_class: Arii\UserBundle\Entity\Group
    from_email:
        address:        admin@arii.com
        sender_name:    Admin

# Config FOSRestBundle
sensio_framework_extra:
#    view: { annotations: false }
    request: { converters: true }

fos_rest:
    body_converter:
        enabled: true
        validate: true
        validation_errors_argument: violations
    param_fetcher_listener: force
    body_listener: true
    format_listener:
        enabled: true
        rules:
            - { path: '^/api/', priorities: ['json'], fallback_format: 'json' }
            - { path: '^/', priorities: [ 'html', '*/*'], fallback_format: html, prefer_extension: true }
    versioning: true
    view:
        view_response_listener: 'force'
    serializer:
        serialize_null: true        
    exception:
        enabled: true
        codes:
           { Arii\CoreBundle\Exception\ResourceValidationException: 400, \Exception: 500 }
        messages:
           { Arii\CoreBundle\Exception\ResourceValidationException: true }
           
parameters:
    pdo.db_options:
        db_table:    ARII_SESSION
        db_id_col:   session_id
        db_data_col: session_value
        db_time_col: session_time
    
services:
    # Oracle
#    oracle.listener:
#        class: Doctrine\DBAL\Event\Listeners\OracleSessionInit
#        tags:
#            - { name: doctrine.event_listener, event: postConnect }
    
    pdo:
        class: PDO
        arguments:
            - "mysql:host=%database_host%;port=%database_port%;dbname=%database_name%"
            - '%database_user%'
            - '%database_password%'
            
        calls:
            - [setAttribute, [3, 2]] # \PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION        

    fos_user.doctrine_registry:
        alias: doctrine

    arii.normalizer.resource_validation_exception:
        class: Arii\CoreBundle\Normalizer\NotFoundHttpExceptionNormalizer
        arguments:
            - { type: 'Symfony\Component\HttpKernel\Exception\NotFoundHttpException' }
        tags:
            - { name: arii.normalizer }
 
# Avoir compatibilite avec le listener actuel 
#    arii.exception_subscriber:
#        class: Arii\CoreBundle\EventSubscriber\ExceptionListener
#        arguments:
#            - '@jms_serializer'
#        tags:
#            - { name: kernel.event_subscriber }
            
# Session en base de donnees
#    session.handler.pdo:
#        class:     Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler
#        arguments: [@pdo, %pdo.db_options%]